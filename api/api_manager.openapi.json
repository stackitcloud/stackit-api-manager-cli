{
  "components": {
    "schemas": {
      "GoogleProtobufAny": {
        "additionalProperties": true,
        "description": "Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.",
        "properties": {
          "@type": {
            "description": "The type of the serialized message.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PublishMetadata": {
        "properties": {
          "identifier": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "stage": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PublishRequest": {
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/PublishMetadata"
          },
          "spec": {
            "$ref": "#/components/schemas/Spec"
          }
        },
        "type": "object"
      },
      "PublishResponse": {
        "description": "OpenAPI specification was published successfully",
        "properties": {
          "apiUrl": {
            "type": "string"
          }
        },
        "title": "Publish response",
        "type": "object"
      },
      "PublishValidateRequest": {
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/PublishMetadata"
          },
          "spec": {
            "$ref": "#/components/schemas/Spec"
          }
        },
        "type": "object"
      },
      "PublishValidateResponse": {
        "description": "OpenAPI specification was validated successfully",
        "title": "Validate response",
        "type": "object"
      },
      "RetireMetadata": {
        "properties": {
          "identifier": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RetireRequest": {
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/RetireMetadata"
          }
        },
        "type": "object"
      },
      "RetireResponse": {
        "description": "OpenAPI specification was retired successfully",
        "title": "Retire response",
        "type": "object"
      },
      "Spec": {
        "properties": {
          "openApi": {
            "$ref": "#/components/schemas/Spec_OpenApi"
          }
        },
        "type": "object"
      },
      "Spec_OpenApi": {
        "properties": {
          "base64Encoded": {
            "description": "now the spec will be base64 string, later we might add a url to a spec file or something else",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details.  There is a common set of message types for APIs to use.",
            "items": {
              "$ref": "#/components/schemas/GoogleProtobufAny"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "description": "STACKIT API Manager",
    "title": "STACKIT API Management Service",
    "version": "1.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1/projects/{metadata.project_id}/api/{metadata.identifier}": {
      "delete": {
        "description": "Retire an already existing API for a dedicated service by providing its Identifier",
        "operationId": "APIManagerService_Retire",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.project_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "metadata.identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetireRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetireResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Could not find the API."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Retire API Endpoint",
        "tags": [
          "APIManagerService"
        ]
      },
      "post": {
        "description": "Publish a new API for a dedicated service by providing the OpenApiSpec for it",
        "operationId": "APIManagerService_Publish",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.project_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "metadata.identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Could not read or validate the OpenAPI specification."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Publish API Endpoint",
        "tags": [
          "APIManagerService"
        ]
      }
    },
    "/v1/projects/{metadata.project_id}/api/{metadata.identifier}/validate": {
      "post": {
        "description": "Validate the OpenApiSpec for an API by providing the OAS for it",
        "operationId": "APIManagerService_PublishValidate",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.project_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "metadata.identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishValidateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishValidateResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Could not read or validate the OpenAPI specification."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "summary": "Validate API Endpoint",
        "tags": [
          "APIManagerService"
        ]
      }
    }
  },
  "servers": [
    {
      "description": "STACKIT API Manager API",
      "url": "https://api-manager.api.stackit.cloud"
    }
  ],
  "tags": [
    {
      "name": "APIManagerService"
    }
  ]
}