{
  "components": {
    "schemas": {
      "FetchAPIResponse": {
        "description": "API was fetched successfully",
        "properties": {
          "apiUrl": {
            "type": "string"
          },
          "spec": {
            "$ref": "#/components/schemas/Spec"
          },
          "stage": {
            "type": "string"
          },
          "upstreamUrl": {
            "type": "string"
          }
        },
        "title": "FetchAPI response",
        "type": "object"
      },
      "FetchProjectAPIIdentifiersResponse": {
        "description": "API identifiers were fetched successfully",
        "properties": {
          "identifiers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "FetchProjectAPIIdentifiers response",
        "type": "object"
      },
      "PublishMetadata": {
        "properties": {
          "stage": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PublishRequest": {
        "properties": {
          "identifier": {
            "readOnly": true,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/PublishMetadata"
          },
          "projectId": {
            "readOnly": true,
            "type": "string"
          },
          "spec": {
            "$ref": "#/components/schemas/Spec"
          }
        },
        "type": "object"
      },
      "PublishResponse": {
        "description": "OpenAPI specification was published successfully",
        "properties": {
          "apiUrl": {
            "type": "string"
          }
        },
        "title": "Publish response",
        "type": "object"
      },
      "PublishValidateRequest": {
        "properties": {
          "identifier": {
            "readOnly": true,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/PublishMetadata"
          },
          "projectId": {
            "readOnly": true,
            "type": "string"
          },
          "spec": {
            "$ref": "#/components/schemas/Spec"
          }
        },
        "type": "object"
      },
      "PublishValidateResponse": {
        "description": "OpenAPI specification was validated successfully",
        "properties": {
          "linterWarnings": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "linterWarningsCount": {
            "type": "string"
          }
        },
        "title": "Validate response",
        "type": "object"
      },
      "RetireRequest": {
        "properties": {
          "identifier": {
            "readOnly": true,
            "type": "string"
          },
          "projectId": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RetireResponse": {
        "description": "OpenAPI specification was retired successfully",
        "title": "Retire response",
        "type": "object"
      },
      "Spec": {
        "properties": {
          "openApi": {
            "$ref": "#/components/schemas/Spec_OpenApi"
          }
        },
        "type": "object"
      },
      "Spec_OpenApi": {
        "properties": {
          "base64Encoded": {
            "description": "now the spec will be base64 string, later we might add a url to a spec file or something else",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "description": "STACKIT API Manager",
    "title": "STACKIT API Management Service",
    "version": "1.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1/projects/{projectId}": {
      "get": {
        "description": "Fetches all API identifiers which belong to a project by providing its projectId",
        "operationId": "APIManagerService_FetchProjectAPIIdentifiers",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchProjectAPIIdentifiersResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Could not fetch API identifiers for project."
          }
        },
        "summary": "Fetch Project APIIdentifiers Endpoint",
        "tags": [
          "APIManagerService"
        ]
      }
    },
    "/v1/projects/{projectId}/api/{identifier}": {
      "delete": {
        "description": "Retire an already existing API for a dedicated service by providing its Identifier",
        "operationId": "APIManagerService_Retire",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetireRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetireResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Could not find the API."
          }
        },
        "summary": "Retire API Endpoint",
        "tags": [
          "APIManagerService"
        ]
      },
      "get": {
        "description": "Fetches an already existing API for a dedicated service by providing its identifier",
        "operationId": "APIManagerService_FetchAPI",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchAPIResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Could not fetch API."
          }
        },
        "summary": "Fetch API Endpoint",
        "tags": [
          "APIManagerService"
        ]
      },
      "post": {
        "description": "Publish a new API for a dedicated service by providing the OpenApiSpec for it",
        "operationId": "APIManagerService_Publish",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Could not read or validate the OpenAPI specification."
          }
        },
        "summary": "Publish API Endpoint",
        "tags": [
          "APIManagerService"
        ]
      }
    },
    "/v1/projects/{projectId}/api/{identifier}/validate": {
      "post": {
        "description": "Validate the OpenApiSpec for an API by providing the OAS for it",
        "operationId": "APIManagerService_PublishValidate",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishValidateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishValidateResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Could not read or validate the OpenAPI specification."
          }
        },
        "summary": "Validate API Endpoint",
        "tags": [
          "APIManagerService"
        ]
      }
    }
  },
  "servers": [
    {
      "description": "STACKIT API Manager",
      "url": "https://api-manager.api.stackit.cloud"
    }
  ],
  "tags": [
    {
      "name": "APIManagerService"
    }
  ]
}