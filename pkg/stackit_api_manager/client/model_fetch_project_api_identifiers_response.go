/*
STACKIT API Management Service

STACKIT API Manager

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// FetchProjectAPIIdentifiersResponse API identifiers were fetched successfully
type FetchProjectAPIIdentifiersResponse struct {
	// List of available API identifiers for chosen project ID
	Identifiers []string `json:"identifiers,omitempty"`
}

// NewFetchProjectAPIIdentifiersResponse instantiates a new FetchProjectAPIIdentifiersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFetchProjectAPIIdentifiersResponse() *FetchProjectAPIIdentifiersResponse {
	this := FetchProjectAPIIdentifiersResponse{}
	return &this
}

// NewFetchProjectAPIIdentifiersResponseWithDefaults instantiates a new FetchProjectAPIIdentifiersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFetchProjectAPIIdentifiersResponseWithDefaults() *FetchProjectAPIIdentifiersResponse {
	this := FetchProjectAPIIdentifiersResponse{}
	return &this
}

// GetIdentifiers returns the Identifiers field value if set, zero value otherwise.
func (o *FetchProjectAPIIdentifiersResponse) GetIdentifiers() []string {
	if o == nil || o.Identifiers == nil {
		var ret []string
		return ret
	}
	return o.Identifiers
}

// GetIdentifiersOk returns a tuple with the Identifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchProjectAPIIdentifiersResponse) GetIdentifiersOk() ([]string, bool) {
	if o == nil || o.Identifiers == nil {
		return nil, false
	}
	return o.Identifiers, true
}

// HasIdentifiers returns a boolean if a field has been set.
func (o *FetchProjectAPIIdentifiersResponse) HasIdentifiers() bool {
	if o != nil && o.Identifiers != nil {
		return true
	}

	return false
}

// SetIdentifiers gets a reference to the given []string and assigns it to the Identifiers field.
func (o *FetchProjectAPIIdentifiersResponse) SetIdentifiers(v []string) {
	o.Identifiers = v
}

func (o FetchProjectAPIIdentifiersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Identifiers != nil {
		toSerialize["identifiers"] = o.Identifiers
	}
	return json.Marshal(toSerialize)
}

type NullableFetchProjectAPIIdentifiersResponse struct {
	value *FetchProjectAPIIdentifiersResponse
	isSet bool
}

func (v NullableFetchProjectAPIIdentifiersResponse) Get() *FetchProjectAPIIdentifiersResponse {
	return v.value
}

func (v *NullableFetchProjectAPIIdentifiersResponse) Set(val *FetchProjectAPIIdentifiersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFetchProjectAPIIdentifiersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFetchProjectAPIIdentifiersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFetchProjectAPIIdentifiersResponse(val *FetchProjectAPIIdentifiersResponse) *NullableFetchProjectAPIIdentifiersResponse {
	return &NullableFetchProjectAPIIdentifiersResponse{value: val, isSet: true}
}

func (v NullableFetchProjectAPIIdentifiersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFetchProjectAPIIdentifiersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


