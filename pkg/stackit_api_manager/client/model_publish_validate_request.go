/*
STACKIT API Management Service

STACKIT API Manager

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PublishValidateRequest struct for PublishValidateRequest
type PublishValidateRequest struct {
	// Identifier of API to be validated
	Identifier *string          `json:"identifier,omitempty"`
	Metadata   *PublishMetadata `json:"metadata,omitempty"`
	// Project ID for API to be validated
	ProjectId *string `json:"projectId,omitempty"`
	Spec      *Spec   `json:"spec,omitempty"`
}

// NewPublishValidateRequest instantiates a new PublishValidateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublishValidateRequest() *PublishValidateRequest {
	this := PublishValidateRequest{}
	return &this
}

// NewPublishValidateRequestWithDefaults instantiates a new PublishValidateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublishValidateRequestWithDefaults() *PublishValidateRequest {
	this := PublishValidateRequest{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *PublishValidateRequest) GetIdentifier() string {
	if o == nil || o.Identifier == nil {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishValidateRequest) GetIdentifierOk() (*string, bool) {
	if o == nil || o.Identifier == nil {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *PublishValidateRequest) HasIdentifier() bool {
	if o != nil && o.Identifier != nil {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *PublishValidateRequest) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PublishValidateRequest) GetMetadata() PublishMetadata {
	if o == nil || o.Metadata == nil {
		var ret PublishMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishValidateRequest) GetMetadataOk() (*PublishMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PublishValidateRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given PublishMetadata and assigns it to the Metadata field.
func (o *PublishValidateRequest) SetMetadata(v PublishMetadata) {
	o.Metadata = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *PublishValidateRequest) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishValidateRequest) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *PublishValidateRequest) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *PublishValidateRequest) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *PublishValidateRequest) GetSpec() Spec {
	if o == nil || o.Spec == nil {
		var ret Spec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishValidateRequest) GetSpecOk() (*Spec, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *PublishValidateRequest) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given Spec and assigns it to the Spec field.
func (o *PublishValidateRequest) SetSpec(v Spec) {
	o.Spec = &v
}

func (o PublishValidateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Identifier != nil {
		toSerialize["identifier"] = o.Identifier
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	return json.Marshal(toSerialize)
}

type NullablePublishValidateRequest struct {
	value *PublishValidateRequest
	isSet bool
}

func (v NullablePublishValidateRequest) Get() *PublishValidateRequest {
	return v.value
}

func (v *NullablePublishValidateRequest) Set(val *PublishValidateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePublishValidateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePublishValidateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublishValidateRequest(val *PublishValidateRequest) *NullablePublishValidateRequest {
	return &NullablePublishValidateRequest{value: val, isSet: true}
}

func (v NullablePublishValidateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublishValidateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
