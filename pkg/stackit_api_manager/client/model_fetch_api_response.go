/*
STACKIT API Management Service

STACKIT API Manager

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// FetchAPIResponse API was fetched successfully
type FetchAPIResponse struct {
	// URL under which fetched API is available
	ApiUrl *string `json:"apiUrl,omitempty"`
	Spec *Spec `json:"spec,omitempty"`
	// Server stage under which fetched API is published
	Stage *string `json:"stage,omitempty"`
	// URL for the upstream server targeted by the fetched API
	UpstreamUrl *string `json:"upstreamUrl,omitempty"`
}

// NewFetchAPIResponse instantiates a new FetchAPIResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFetchAPIResponse() *FetchAPIResponse {
	this := FetchAPIResponse{}
	return &this
}

// NewFetchAPIResponseWithDefaults instantiates a new FetchAPIResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFetchAPIResponseWithDefaults() *FetchAPIResponse {
	this := FetchAPIResponse{}
	return &this
}

// GetApiUrl returns the ApiUrl field value if set, zero value otherwise.
func (o *FetchAPIResponse) GetApiUrl() string {
	if o == nil || o.ApiUrl == nil {
		var ret string
		return ret
	}
	return *o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchAPIResponse) GetApiUrlOk() (*string, bool) {
	if o == nil || o.ApiUrl == nil {
		return nil, false
	}
	return o.ApiUrl, true
}

// HasApiUrl returns a boolean if a field has been set.
func (o *FetchAPIResponse) HasApiUrl() bool {
	if o != nil && o.ApiUrl != nil {
		return true
	}

	return false
}

// SetApiUrl gets a reference to the given string and assigns it to the ApiUrl field.
func (o *FetchAPIResponse) SetApiUrl(v string) {
	o.ApiUrl = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *FetchAPIResponse) GetSpec() Spec {
	if o == nil || o.Spec == nil {
		var ret Spec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchAPIResponse) GetSpecOk() (*Spec, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *FetchAPIResponse) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given Spec and assigns it to the Spec field.
func (o *FetchAPIResponse) SetSpec(v Spec) {
	o.Spec = &v
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *FetchAPIResponse) GetStage() string {
	if o == nil || o.Stage == nil {
		var ret string
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchAPIResponse) GetStageOk() (*string, bool) {
	if o == nil || o.Stage == nil {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *FetchAPIResponse) HasStage() bool {
	if o != nil && o.Stage != nil {
		return true
	}

	return false
}

// SetStage gets a reference to the given string and assigns it to the Stage field.
func (o *FetchAPIResponse) SetStage(v string) {
	o.Stage = &v
}

// GetUpstreamUrl returns the UpstreamUrl field value if set, zero value otherwise.
func (o *FetchAPIResponse) GetUpstreamUrl() string {
	if o == nil || o.UpstreamUrl == nil {
		var ret string
		return ret
	}
	return *o.UpstreamUrl
}

// GetUpstreamUrlOk returns a tuple with the UpstreamUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchAPIResponse) GetUpstreamUrlOk() (*string, bool) {
	if o == nil || o.UpstreamUrl == nil {
		return nil, false
	}
	return o.UpstreamUrl, true
}

// HasUpstreamUrl returns a boolean if a field has been set.
func (o *FetchAPIResponse) HasUpstreamUrl() bool {
	if o != nil && o.UpstreamUrl != nil {
		return true
	}

	return false
}

// SetUpstreamUrl gets a reference to the given string and assigns it to the UpstreamUrl field.
func (o *FetchAPIResponse) SetUpstreamUrl(v string) {
	o.UpstreamUrl = &v
}

func (o FetchAPIResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiUrl != nil {
		toSerialize["apiUrl"] = o.ApiUrl
	}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	if o.Stage != nil {
		toSerialize["stage"] = o.Stage
	}
	if o.UpstreamUrl != nil {
		toSerialize["upstreamUrl"] = o.UpstreamUrl
	}
	return json.Marshal(toSerialize)
}

type NullableFetchAPIResponse struct {
	value *FetchAPIResponse
	isSet bool
}

func (v NullableFetchAPIResponse) Get() *FetchAPIResponse {
	return v.value
}

func (v *NullableFetchAPIResponse) Set(val *FetchAPIResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFetchAPIResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFetchAPIResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFetchAPIResponse(val *FetchAPIResponse) *NullableFetchAPIResponse {
	return &NullableFetchAPIResponse{value: val, isSet: true}
}

func (v NullableFetchAPIResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFetchAPIResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


