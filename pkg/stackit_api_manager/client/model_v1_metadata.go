/*
api-manager-api

STACKIT API Manager API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// V1Metadata struct for V1Metadata
type V1Metadata struct {
	Stage *string `json:"stage,omitempty"`
}

// NewV1Metadata instantiates a new V1Metadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Metadata() *V1Metadata {
	this := V1Metadata{}
	return &this
}

// NewV1MetadataWithDefaults instantiates a new V1Metadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1MetadataWithDefaults() *V1Metadata {
	this := V1Metadata{}
	return &this
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *V1Metadata) GetStage() string {
	if o == nil || o.Stage == nil {
		var ret string
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Metadata) GetStageOk() (*string, bool) {
	if o == nil || o.Stage == nil {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *V1Metadata) HasStage() bool {
	if o != nil && o.Stage != nil {
		return true
	}

	return false
}

// SetStage gets a reference to the given string and assigns it to the Stage field.
func (o *V1Metadata) SetStage(v string) {
	o.Stage = &v
}

func (o V1Metadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Stage != nil {
		toSerialize["stage"] = o.Stage
	}
	return json.Marshal(toSerialize)
}

type NullableV1Metadata struct {
	value *V1Metadata
	isSet bool
}

func (v NullableV1Metadata) Get() *V1Metadata {
	return v.value
}

func (v *NullableV1Metadata) Set(val *V1Metadata) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Metadata) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Metadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Metadata(val *V1Metadata) *NullableV1Metadata {
	return &NullableV1Metadata{value: val, isSet: true}
}

func (v NullableV1Metadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Metadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
