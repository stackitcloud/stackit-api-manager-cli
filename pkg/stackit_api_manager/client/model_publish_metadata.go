/*
STACKIT API Management Service

STACKIT API Manager

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PublishMetadata struct for PublishMetadata
type PublishMetadata struct {
	Identifier *string `json:"identifier,omitempty"`
	ProjectId  *string `json:"projectId,omitempty"`
	Stage      *string `json:"stage,omitempty"`
}

// NewPublishMetadata instantiates a new PublishMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublishMetadata() *PublishMetadata {
	this := PublishMetadata{}
	return &this
}

// NewPublishMetadataWithDefaults instantiates a new PublishMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublishMetadataWithDefaults() *PublishMetadata {
	this := PublishMetadata{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *PublishMetadata) GetIdentifier() string {
	if o == nil || o.Identifier == nil {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishMetadata) GetIdentifierOk() (*string, bool) {
	if o == nil || o.Identifier == nil {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *PublishMetadata) HasIdentifier() bool {
	if o != nil && o.Identifier != nil {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *PublishMetadata) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *PublishMetadata) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishMetadata) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *PublishMetadata) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *PublishMetadata) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *PublishMetadata) GetStage() string {
	if o == nil || o.Stage == nil {
		var ret string
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishMetadata) GetStageOk() (*string, bool) {
	if o == nil || o.Stage == nil {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *PublishMetadata) HasStage() bool {
	if o != nil && o.Stage != nil {
		return true
	}

	return false
}

// SetStage gets a reference to the given string and assigns it to the Stage field.
func (o *PublishMetadata) SetStage(v string) {
	o.Stage = &v
}

func (o PublishMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Identifier != nil {
		toSerialize["identifier"] = o.Identifier
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.Stage != nil {
		toSerialize["stage"] = o.Stage
	}
	return json.Marshal(toSerialize)
}

type NullablePublishMetadata struct {
	value *PublishMetadata
	isSet bool
}

func (v NullablePublishMetadata) Get() *PublishMetadata {
	return v.value
}

func (v *NullablePublishMetadata) Set(val *PublishMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullablePublishMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullablePublishMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublishMetadata(val *PublishMetadata) *NullablePublishMetadata {
	return &NullablePublishMetadata{value: val, isSet: true}
}

func (v NullablePublishMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublishMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
